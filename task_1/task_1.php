<?php
$articleText = 'Сплочённость команды профессионалов позволяет выполнить важные задания по разработке форм воздействия. А также явные признаки победы институционализации представляют собой не что иное, как квинтэссенцию победы маркетинга над разумом и должны быть заблокированы в рамках своих собственных рациональных ограничений. С другой стороны, курс на социально-ориентированный национальный проект, в своём классическом представлении, допускает внедрение первоочередных требований.'; // Присвоили переменной текст статьи
$articleLink = 'https://fish-text.ru'; // Присвоили переменной ссылку на статью
$articlePreview = mb_substr($articleText,0,200); // Обрезали статью до 200 символов
$articlePreview = explode(' ', $articlePreview); // Разбиваем текст на отдельные слова(элементы)

$lastWords = array_slice($articlePreview, -3 ); // Выносим последние 3 слова статьи в отдельную переменную
$articlePreview = array_slice($articlePreview, 0 ,-3); // Вырезаем послдние 3 слова статьи
$lastWords = implode(' ',$lastWords); // Переводим элементы массива в строку
$lastWords = '<a href="' . $articleLink  . '">' . $lastWords .'... </a>'; // Оборачиваем последние слова в ссылку и добавляем троеточие
$articlePreview = implode(' ', $articlePreview) . ' ' . $lastWords; // Объединяем превью статьи с ссылкой
echo $articlePreview; // Выводим результат








//В UTF-8 символы занимают от 1 до 4 байт. Кириллица - 2 байта. Строковая функция substr не работает с UTF-8 и можно столкнуться с проблемой неправильного подсчета символов, для устранения данной проблемы необходимо использовать функцию mb_substr,которая выполняет безопасную многобайтовую операцию substr() на основе количества символов. Позиция вычисляется относительно начала строки.
//Также при обрезке статьи до определенного количества символов, есть вероятность что последние слова будут написаны не полностью в зависимости от статьи и будет обрыв из букв, в этом неудобство обрезать текст посимвольно.